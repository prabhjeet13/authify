var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { forwardRef } from 'react';
import { allowed } from '../utils/allowed';
import React from 'react';
import { HeaderProvider } from '../utils/tableContext';
var Table = forwardRef(function (_a, ref) {
    var className = _a.className, props = __rest(_a, ["className"]);
    var classes = "".concat(className || '', " responsiveTable");
    return (React.createElement("table", __assign({ "data-testid": "table" }, allowed(props), { className: classes, ref: ref })));
});
Table.displayName = 'Table';
function TableWithHeaderProvider(props) {
    return (React.createElement(HeaderProvider, null,
        React.createElement(Table, __assign({}, props))));
}
export default TableWithHeaderProvider;
